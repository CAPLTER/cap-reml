% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_spatialRaster.R
\name{create_spatialRaster}
\alias{create_spatialRaster}
\title{create_spatialRaster}
\usage{
create_spatialRaster(rasterName, rasterValueAttrs, rasterValueFactors,
  description)
}
\arguments{
\item{rasterName}{the quoted name of the raster file (or base file in the
case when the entity consists of multiple files)}

\item{rasterValueAttrs}{raster attribute and details}

\item{rasterValueFactors}{raster attribute details if attribute is of type
enumerated domain}

\item{description}{quoted description of raster}
}
\value{
EML spatial data object is returned. Additionally, the spatial data
  file is renamed with the project id + base file name + md5sum + file
  extension (zip in the case when multiple files are aggregated).
}
\description{
create_spatialRaster generates a EML entity of type
  spatialRaster
}
\details{
a single data file (e.g., *.img) or a collection of related files
  (e.g., *.img and *.img.aux.xml) may be passed to create_spatialRaster. In
  the case of multiple file, all related files (as identified by a common
  base name) are aggregated into a single compressed (zipped) file. In all
  cases, the resulting entity is renamed with the project id + base file name
  + md5sum + file extension (zip in the case when multiple files are
  aggregated).
}
\examples{
The current workflow includes hand-coding metadata given that there will
only ever be one attribute for a raster.

Create attribute table manually, here calling the attribute 'value':
rasterValueAttrs <-
  data.frame(
    attributeName = c('value'),
    attributeLabel = c('categorical raster cell value'),
    attributeDefinition = c('categorical value...land use/land cover type'),
    definition = c('categorical value...land use/land cover type')
  )

In this example, the raster value is of type enumerated domain so factor
details must be provided.

Generate factor details, here details are pulled from a file where the
code and definition are detailed.
rasterValueFactors <-
  data.frame(
    attributeName = "value",
    code = rasterValuesMetadata$`Class ID`,
    definition = rasterValuesMetadata$`Class Name`
  )

Create attribute list to pass to createSpatialRaster function
rasterAttributeList <- set_attributes(attributes = rasterValueAttrs,
                                      factors = rasterValueFactors,
                                      col_classes = c("factor"))

\\code {spatial entity <- create_spatialRaster('name of raster',
                                        rasterValueAttrs,
                                        rasterAttributeList,
                                        'Phoenix-area raster')}
}
