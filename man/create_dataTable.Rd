% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_dataTable.R
\name{create_dataTable}
\alias{create_dataTable}
\title{create_dataTable}
\usage{
create_dataTable(dfname, description, dateRangeField)
}
\arguments{
\item{dfname}{The unquoted name of the R data frame or Tibble.}

\item{description}{A quoted description of the data frame or Tibble that will
populate the entityDescription element of the EML document. name of the
raster data to be processed is included as a parameter in this metadata
file).}

\item{dateRangeField}{(optional) The quoted name of the data entity field
that is a date field that would reflect the start and end dates of the data
reflected in the data entity.}
}
\value{
EML dataTable object is returned. Additionally, the data entity is
  written to file as type csv, and renamed with the project id + base file
  name + md5sum + file extension (csv in this case).
}
\description{
create_dataTable generates a EML entity of type dataTable
}
\details{
create_dataTable creates a EML dataTable object from a data frame or
  Tibble object in the R environment. The function reads the attributes and
  classes contained within a supporting csv file generated from the
  write_attributes function - create_dataTable will look for a file in the
  working directory with a name of type dataframeName_attrs.csv. Factors also
  are read from a supporting csv file - create_dataTable will look for a file
  in the working directory with a name of type dataframeName_factors.csv. If
  that exists, the factor details outlined in that file will be incorporated
  into the EML, else the EML will be built without factor metadata. Note that
  this functionality is predicated on the existence of a file containing
  metadata about any factors in the dataframe, that that file is in the
  working directory, and that the file matches the dataframe name precisely;
  the function does not look for variables of types factor in the dataframe.
  In addition to generating a EML entity of type dataTable, create_dataTable
  writes the R object to file as type csv, renames the file with project id +
  base file name + md5sum + file extension (csv in this case), and deletes
  the original file.
}
\note{
create_dataTable will look for a project id in the working environment;
  this parameter is not passed to the function and it must exist.

create_dataTable currently does not accept an argument for url to a
  data file; the package defaults to a CAP LTER specific URL, and this must
  be changed manually in the resulting xml if needed.
}
\examples{
\dontrun{

 dataTableObject <- create_dataTable(
   dfname = data object in R env.,
   description = "data from the field study",
   dateRangeField = "collection_date")
}

}
